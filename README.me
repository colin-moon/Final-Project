My project is a an escape the maze type game where the player as to avoid the walls and the flying objects, and navigate through a labrynth. For this project I was inspired by old arcade games that were known for being quite simple, but also very challenging. 
I started working by creating the the character and the movemnt. This was pretty simple as I was able to use some of my previous work and just tweak some of the settings. Then, I had to plan out the maze which took a while as I needed to come up with a path for the player to be able to escape and then create all of the dead ends. My first iteration was way too simple which was really frustrating as I spent a lot of time on it but I essentially had to restart. My second (current) attempt was way better and I'm I restarted because I think it came out great. Then, I needed to code the maze into the game. I used rectangles to create the walls. I started by making rings with equal space between. I then cut out the exit path by splitting the rectangles in two and/or three different pieces. Once I had the exit path, I created all of the other breaks in the rectangles for the diverving paths and then put in the extra walls to create all of the dead ends.  
Once that was finished I moved on to creating all eight of the moving obstacles. It took me a little bit to figure out their positions but I was able to use my code from previous assignments whcih saved me some time. I created four obstacles closer to the center that moved either up and down or left to right at a speed of three. The other four obstacles were closer to the border and they moved the same but had a speed of two. I represented this difference in speed by darkening the four obstacles closer to the edge. 
Once the maze and the obstacles were complete I had to implement collision between them and the player so that when they collided, the player would reset. This took me a while and I had to watch several youtube videos but I was able to get it to work. I created a function that would detect if the player's position was greater or less then the coordinates of the walls and obstacles with and if statement. If it was, I would run a reset player function that would send that back to the starting point. I also I to do this for the border. In hindsight, I should have just added and extra ring to the walls instead of creating a different border function. That way, I wouldn;t of had to create another colliosion function. 
Once collision was in I could focus on the final part which was the win screen. I used win variable that was set to 'false' by default and would only be activated if that player's position passed a set of coordinates. I used and if statement for that. Once the win variable turned true, the obstacles and player movement stopped and the text was displayed. I then gave the player an option to restart with a keyPressed function. If the 'R' key was pressed while the won variable was true, it would turn that variable false again and reset the player. 
A major success I had was making the game difficutl enough. I had some friends test it out and they said that it was hard enough to be a challenge and frustrating however, it wasn't too hard that it felt impossible. I think one thing I could have done better was to lean into that idea. One thing I tried to add was a timer to add a sense of urgency to the game. This proved to be too challenging as I couldn't get the clock reset and when the time ran out, the game would break. Overall, I'm really happy with my finished product. Visually it's quite simple but that's becasue I wanted the focus to be on the function. 
